{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","className","maxHorizontal","tileSideLengths","tileTextStyles","fontFamily","fontSize","fill","tileGap","tileBorderRadii","tiles","text","shadow","href","sideLength","textStyle","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oNA0DeA,MAvDf,WACE,OACE,qBAAKC,UAAU,MAAf,SACE,yBAAQA,UAAU,aAAlB,UACE,iFACA,8BACE,cAAC,gBAAD,CACEC,cAAe,EACfC,gBAAiB,IACjBC,eAAgB,CACdC,WAAY,sBACZC,SAAU,OACVC,KAAM,SAERC,QAAS,EACTC,gBAAiB,EACjBC,MAAO,CACL,CACEC,KAAM,SACNJ,KAAM,UACNK,OAAQ,UACRC,KAAM,iHAER,CACEF,KAAM,SACNJ,KAAM,UACNK,OAAQ,UACRC,KAAM,gDAER,CACEF,KAAM,SACNJ,KAAM,UACNK,OAAQ,UACRC,KAAM,2DAER,CACEF,KAAM,SACNJ,KAAM,UACNK,OAAQ,UACRC,KAAM,sDAIZ,cAAC,UAAD,CACEC,WAAY,IACZH,KAAK,aACLI,UAAW,CAAER,KAAM,QACnBM,KAAK,wDCtCFG,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.a4070405.chunk.js","sourcesContent":["import \"./App.css\";\r\nimport { Hexagon, TiledHexagons } from \"tiled-hexagons\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        <h1>HexHub for Sidechain Hackathon User Experience!</h1>\r\n        <p>\r\n          <TiledHexagons\r\n            maxHorizontal={1}\r\n            tileSideLengths={120}\r\n            tileTextStyles={{\r\n              fontFamily: \"Font Awesome Brands\",\r\n              fontSize: \"58px\",\r\n              fill: \"white\",\r\n            }}\r\n            tileGap={0}\r\n            tileBorderRadii={9}\r\n            tiles={[\r\n              {\r\n                text: \"step.0\",\r\n                fill: \"#4267b2\",\r\n                shadow: \"#1a2947\",\r\n                href: \"https://dweb.link/ipfs/bafybeiei2nhtielpwz4rre4gyfrozsogrl6czl7q5225oxkcxgb63djaoa?filename=sidechainhack.png\",\r\n              },\r\n              {\r\n                text: \"step.1\",\r\n                fill: \"#282828\",\r\n                shadow: \"#1a1a1a\",\r\n                href: \"https://upbeat-albattani-f30fb4.netlify.app/\",\r\n              },\r\n              {\r\n                text: \"step.2\",\r\n                fill: \"#1dcaff\",\r\n                shadow: \"#0084b4\",\r\n                href: \"https://tippi-fifestarr.github.io/ethereum-boilerplate/\",\r\n              },\r\n              {\r\n                text: \"step.3\",\r\n                fill: \"#ED01ED\",\r\n                shadow: \"#0084b4\",\r\n                href: \"http://localhost:48084/ipns/chat.thedisco.zone/\",\r\n              },\r\n            ]}\r\n          />\r\n          <Hexagon\r\n            sideLength={200}\r\n            text=\"Start Here\"\r\n            textStyle={{ fill: \"blue\" }}\r\n            href=\"https://github.com/tippi-fifestarr/hexhub2\"\r\n          />\r\n        </p>\r\n      </header>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}